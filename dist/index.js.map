{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react'\n\nexport function ResponsiveGridWrapper(props: ResponsiveGridWrapperProps) {\n  const { maxColumnCount, minColumnCount = 1, gap = 0, children } = props\n  const wrapperRef = useRef<HTMLDivElement>(null)\n\n  const [wrapperWidth, setWrapperWidth] = useState<number>()\n  // get wrapper's child elements widths\n  const gridItemWidthInWrapper: number = (\n    Array.from(children as [])[0] as ReactElement\n  ).props.minWidth\n\n  const [currentRowCount, setCurrentRowCount] = useState<number>()\n\n  const handleWindowResize = useCallback(() => {\n    setWrapperWidth(wrapperRef.current?.offsetWidth as number)\n  }, [])\n\n  // const gridItemWidthFromRef = useCallback(() => {\n  //   return wrapperRef.current?.children[0]?.scrollWidth as number\n  // }, [])\n\n  // TODO: problem with grid item's width\n\n  useEffect(() => {\n    if (wrapperRef.current) {\n      setWrapperWidth(wrapperRef.current.clientWidth)\n    }\n  }, [wrapperRef])\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize)\n    return () => {\n      window.removeEventListener('resize', handleWindowResize)\n    }\n  }, [handleWindowResize])\n\n  useEffect(() => {\n    // here's the magic\n    if (wrapperWidth && gridItemWidthInWrapper && gap && maxColumnCount) {\n      if (\n        wrapperWidth - gap * (maxColumnCount - 1) >=\n        gridItemWidthInWrapper * maxColumnCount\n      ) {\n        setCurrentRowCount(maxColumnCount)\n      } else {\n        const autoResponsiveCols = Math.floor(\n          (wrapperWidth - gap * (maxColumnCount - 1)) / gridItemWidthInWrapper\n        )\n        if (autoResponsiveCols <= minColumnCount) {\n          setCurrentRowCount(minColumnCount)\n        } else {\n          setCurrentRowCount(autoResponsiveCols)\n        }\n      }\n    }\n  }, [wrapperWidth, gridItemWidthInWrapper])\n\n  const jsxAttributes = (({\n    maxColumnCount,\n    minColumnCount,\n    children,\n    style,\n    gap,\n    ...o\n  }) => o)(props)\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={{\n        display: 'grid',\n        gridTemplateColumns: `repeat(${currentRowCount}, 1fr)`,\n        gridGap: gap + 'px',\n        width: '100%',\n        ...props.style\n      }}\n      {...jsxAttributes}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport function ResponsiveGridItem(props: ResponsiveGridItemProps) {\n  // add min-width value to children\n  const { children, minWidth } = props\n  const child = React.Children.only(children)\n\n  const jsxAttributes = (({ minWidth, children, style, ...o }) => o)(props)\n\n  const singleGridElementWithMinWidth = React.cloneElement(child, {\n    style: {\n      minWidth: minWidth + 'px',\n      width: '100%',\n      ...props.children.props.style,\n      ...props.style\n    },\n    ...jsxAttributes\n  })\n\n  return singleGridElementWithMinWidth\n}\n\n/**\n * Think this as a grid div.\n */\ninterface ResponsiveGridWrapperProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * How many columns should be in the grid at max.\n   */\n  maxColumnCount: number\n  /**\n   * How many columns should be in the grid at min.\n   * Default: 1\n   */\n  minColumnCount?: number\n  /**\n   * Spaces between grid items. Default: 0\n   */\n  gap?: number\n  children: any\n}\n\n/**\n * Think this as a div in grid.\n */\ninterface ResponsiveGridItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: ReactElement\n  /**\n   * You must enter a min-width value for understand when resizing should stop.\n   */\n  minWidth: number\n}\n"],"names":["ResponsiveGridWrapper","props","maxColumnCount","minColumnCount","gap","children","wrapperRef","useRef","useState","wrapperWidth","setWrapperWidth","gridItemWidthInWrapper","Array","from","minWidth","currentRowCount","setCurrentRowCount","handleWindowResize","useCallback","current","offsetWidth","useEffect","clientWidth","window","addEventListener","removeEventListener","autoResponsiveCols","Math","floor","jsxAttributes","o","React","ref","style","display","gridTemplateColumns","gridGap","width","ResponsiveGridItem","child","Children","only","singleGridElementWithMinWidth","cloneElement"],"mappings":"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"}